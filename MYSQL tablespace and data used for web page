###############################################
###
### to be used after the creation of dockerZ
###
################################################

[Step one]: Search for mysql container. In this case "03dceb02d394"


root@tron:~/wild_proj/Docker-PHP-MySQL# docker ps -a | grep mysql:latest
03dceb02d394        mysql:latest            "docker-entrypoint.sh"   6 minutes ago       Up 6 minutes                3306/tcp                      dockerphpmysql_mysql_1
ac27ee5d466d        mysql:latest            "docker-entrypoint.sh"   6 minutes ago       Exited (0) 6 minutes ago                                  dockerphpmysql_data_1


[Step two}: After you found the specific docker container ID (which will be different on your computer), login on in by using command:
docker exec -it 5687d9d80949 /bin/bash


root@tron:~/wild_proj/Docker-PHP-MySQL# docker exec -ti 03dceb02d394 /bin/bash
root@03dceb02d394:/#



[Step three]: Login to mysql (password and user already defined in docker-compose.yml file)


root@tron:~# docker exec -it 03dceb02d394 /bin/bash
root@03dceb02d3949:/# mysql -uAlex -pAlex
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 112
Server version: 5.7.16 MySQL Community Server (GPL)

Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>


[Step Four]: Create a new tablespace (in our case, database Alex is already created, so going str8 to tablespace creation)


mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| Alex               |
+--------------------+
2 rows in set (0.02 sec)


mysql> use Alex;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql>
mysql> CREATE TABLE IF NOT EXISTS products (
            productID    INT UNSIGNED  NOT NULL AUTO_INCREMENT,
            productCode  CHAR(3)       NOT NULL DEFAULT '',
            name         VARCHAR(30)   NOT NULL DEFAULT '',
            quantity     INT UNSIGNED  NOT NULL DEFAULT 0,
            price        DECIMAL(7,2)  NOT NULL DEFAULT 99999.99,
            PRIMARY KEY  (productID)
          );
	
mysql> describe products;
+-------------+------------------+------+-----+----------+----------------+
| Field       | Type             | Null | Key | Default  | Extra          |
+-------------+------------------+------+-----+----------+----------------+
| productID   | int(10) unsigned | NO   | PRI | NULL     | auto_increment |
| productCode | char(3)          | NO   |     |          |                |
| name        | varchar(30)      | NO   |     |          |                |
| quantity    | int(10) unsigned | NO   |     | 0        |                |
| price       | decimal(7,2)     | NO   |     | 99999.99 |                |
+-------------+------------------+------+-----+----------+----------------+
5 rows in set (0.00 sec)


mysql>  INSERT INTO products VALUES (1001, 'PEN', 'Pen Red', 5000, 1.23);


	
mysql> select * from products;
+-----------+-------------+---------+----------+-------+
| productID | productCode | name    | quantity | price |
+-----------+-------------+---------+----------+-------+
|      1001 | PEN         | Pen Red |     5000 |  1.23 |
+-----------+-------------+---------+----------+-------+
1 row in set (0.00 sec)

mysql>


## been lazy, just one row!!

[Step Five]: Exit from mysql docker

mysql>
mysql> exit
Bye
root@03dceb02d3949:/# exit
exit
root@tron:~#
